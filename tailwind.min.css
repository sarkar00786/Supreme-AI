/*
  Trump AI Assistant - Generated Tailwind CSS
  This file has been manually generated based on the Tailwind classes identified
  in your project's HTML and JavaScript files, to bypass local build issues.
  Replace your existing 'css/tailwind.min.css' with the content of this file.

  NOTE: This file typically contains all used Tailwind utility classes.
  For this update, I'm ensuring all classes used in popup.html, options.html,
  and content.css are present or correctly represented.
  The original content of tailwind.min.css is retained and expanded as needed.
*/

/* Base styles (Tailwind's Preflight) */
*, ::before, ::after {
  box-sizing: border-box;
  border-width: 0;
  border-style: solid;
  border-color: #e5e7eb; /* default border color */
}
::before, ::after {
  --tw-content: '';
}
html {
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}
body {
  margin: 0;
}
hr {
  height: 0;
  color: inherit;
  border-top-width: 1px;
}
abbr:where([title]) {
  text-decoration: underline dotted;
}
h1, h2, h3, h4, h5, h6 {
  font-size: inherit;
  font-weight: inherit;
}
a {
  color: inherit;
  text-decoration: inherit;
}
b, strong {
  font-weight: bolder;
}
code, kbd, samp, pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: 1em;
}
small {
  font-size: 80%;
}
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}
button, input, optgroup, select, textarea {
  font-family: inherit;
  font-size: 100%;
  font-weight: inherit;
  line-height: inherit;
  color: inherit;
  margin: 0;
  padding: 0;
}
button, select {
  text-transform: none;
}
button, [type='button'], [type='reset'], [type='submit'] {
  -webkit-appearance: button;
  background-color: transparent;
  background-image: none;
}
:-moz-focusring {
  outline: auto;
}
:-moz-ui-invalid {
  box-shadow: none;
}
progress {
  vertical-align: baseline;
}
::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
  height: auto;
}
[type='search'] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}
::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}
summary {
  display: list-item;
}
blockquote, dl, dd, h1, h2, h3, h4, h5, h6, hr, figure, p, pre {
  margin: 0;
}
fieldset {
  margin: 0;
  padding: 0;
}
legend {
  padding: 0;
}
ol, ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
textarea {
  resize: vertical;
}
input::placeholder, textarea::placeholder {
  opacity: 1;
  color: #9ca3af; /* Tailwind gray-400 */
}
button, [role="button"] {
  cursor: pointer;
}
:disabled {
  cursor: default;
}
img, svg, video, canvas, audio, iframe, embed, object {
  display: block;
  vertical-align: middle;
}
img, video {
  max-width: 100%;
  height: auto;
}
[hidden] {
  display: none;
}

/* Tailwind Utility Classes - Manually combined and ensured all used classes are present */

/* Display */
.block { display: block; }
.inline-block { display: inline-block; }
.flex { display: flex; }
.flex-col { flex-direction: column; }
.hidden { display: none; }

/* Sizing */
.w-full { width: 100%; }
.h-4 { height: 1rem; }
.min-h-screen { min-height: 100vh; }
.max-w-xs { max-width: 20rem; /* 320px */ }
.max-w-sm { max-width: 24rem; /* 384px */ }
.max-w-md { max-width: 28rem; /* 448px */ }
.max-w-lg { max-width: 32rem; /* 512px */ }
.max-w-xl { max-width: 36rem; /* 576px */ }
.max-w-2xl { max-width: 42rem; /* 672px */ }
.max-w-3xl { max-width: 48rem; /* 768px */ }
.max-w-4xl { max-width: 56rem; /* 896px */ }
.max-w-5xl { max-width: 64rem; /* 1024px */ }
.max-w-6xl { max-width: 72rem; /* 1152px */ }
.max-w-7xl { max-width: 80rem; /* 1280px */ }


/* Padding */
.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
.py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }
.p-4 { padding: 1rem; }
.py-4 { padding-top: 1rem; padding-bottom: 1rem; }
.px-4 { padding-left: 1rem; padding-right: 1rem; }
.pb-2 { padding-bottom: 0.5rem; }

/* Margin */
.mr-1 { margin-right: 0.25rem; }
.mb-1 { margin-bottom: 0.25rem; }
.mt-2 { margin-top: 0.5rem; }
.mt-3 { margin-top: 0.75rem; }
.mt-4 { margin-top: 1rem; }
.mt-6 { margin-top: 1.5rem; }
.mt-8 { margin-top: 2rem; }
.-mt-4 { margin-top: -1rem; }
.mb-4 { margin-bottom: 1rem; }
.mb-2 { margin-bottom: 0.5rem; }
.mb-3 { margin-bottom: 0.75rem; }
.mb-6 { margin-bottom: 1.5rem; }
.ml-2 { margin-left: 0.5rem; }
.mr-2 { margin-right: 0.5rem; }

/* Border */
.border { border-width: 1px; }
.border-gray-600 { border-color: #4b5563; } /* Original */
.rounded-md { border-radius: 0.375rem; } /* Original */
.rounded-lg { border-radius: 0.5rem; } /* Added for consistency */
.rounded-xl { border-radius: 0.75rem; } /* Added for consistency */

/* Backgrounds */
.bg-gray-700 { background-color: #374151; } /* Original */
.bg-gray-800 { background-color: #1f2937; } /* Original */
.bg-gray-900 { background-color: #111827; } /* Original */
.bg-gradient-to-r { background-image: linear-gradient(to right, var(--tw-gradient-stops)); } /* Original */
.from-purple-500 { --tw-gradient-from: #a855f7; --tw-gradient-to: rgba(168, 85, 247, 0); } /* Original */
.to-blue-500 { --tw-gradient-to: #3b82f6; } /* Original */

/* Text */
.text-xs { font-size: 0.75rem; line-height: 1rem; } /* Original */
.text-sm { font-size: 0.875rem; line-height: 1.25rem; } /* Original */
.text-lg { font-size: 1.125rem; line-height: 1.75rem; } /* Original */
.font-semibold { font-weight: 600; } /* Original */
.text-white { color: #fff; } /* Original */
.text-gray-300 { color: #d1d5db; } /* Original */
.text-gray-400 { color: #9ca3af; } /* Original */
.text-center { text-align: center; } /* Original */

/* Flexbox utilities */
.justify-center { justify-content: center; }
.items-center { align-items: center; }
.justify-between { justify-content: space-between; }
.space-x-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; margin-right: calc(0.5rem * var(--tw-space-x-reverse)); margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse))); } /* Original */
.gap-4 { gap: 1rem; } /* Added for options.html */

/* Form elements */
.form-input { /* Custom style for inputs, might combine with .input-field */
    display: block;
    width: 100%;
    padding: 0.5rem 0.75rem;
    font-size: 1rem;
    line-height: 1.5;
    color: #e0e0eb;
    background-color: #3a3a5a;
    background-clip: padding-box;
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 0.375rem;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
.form-input:focus {
    color: #e0e0eb;
    background-color: #3a3a5a;
    border-color: #03dac6;
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(3, 218, 198, 0.25);
}

/* Specific button styles from popup.css and options.html CSS */
.btn { /* General button styles */
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.85rem 1.25rem;
    border-radius: 0.6rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    border: none;
    color: #fff;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

.btn-primary {
    background-image: linear-gradient(45deg, var(--button-gradient-start), var(--button-gradient-end));
    background-size: 200% auto;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}
.btn-primary:hover {
    background-position: right center;
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
    transform: translateY(-2px);
}
.btn-primary:active {
    transform: translateY(0);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
}

/* Other general classes derived or included for consistency */
.relative { position: relative; }
.absolute { position: absolute; }
.top-0 { top: 0; }
.left-0 { left: 0; }
.right-0 { right: 0; }
.bottom-0 { bottom: 0; }
.w-0 { width: 0; }
.h-0 { height: 0; }
.opacity-0 { opacity: 0; }
.opacity-100 { opacity: 1; }
.transition-opacity { transition-property: opacity; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }
.ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }
.duration-500 { transition-duration: 0.5s; }
.duration-300 { transition-duration: 0.3s; }
.z-50 { z-index: 50; }
.overflow-hidden { overflow: hidden; } /* To prevent horizontal scrolling */

/* Utility classes for responsive design, explicitly added */
.sm\:text-sm { /* Example of a responsive breakpoint class */
    @media (min-width: 640px) {
        font-size: 0.875rem; /* 14px */
    }
}
/* Placeholder for md:, lg: prefixes - if explicitly needed, they would be here */
/* For now, direct CSS will handle most responsiveness as it's more explicit in custom components. */

/* Custom classes extracted from options.html inline style or common in popup.css */
.popup-container { /* Specific styles for popup */
    /* Handled in popup.css directly */
}
.settings-container { /* Specific styles for options page */
    /* Handled in options.html inline style */
}
.text-xs { font-size: 0.75rem; line-height: 1rem; }
.-mt-4 { margin-top: -1rem; }
.mb-4 { margin-bottom: 1rem; }
.text-gray-400 { color: #9ca3af; }
.block { display: block; }
.text-sm { font-size: 0.875rem; line-height: 1.25rem; }
.font-medium { font-weight: 500; }
.text-gray-300 { color: #d1d5db; }
.mb-1 { margin-bottom: 0.25rem; }
.mt-2 { margin-top: 0.5rem; }
.mt-4 { margin-top: 1rem; }
.btn-primary { /* defined above as a general button style */ }

/* Ensure all relevant Tailwind classes found in the HTML and JS files are present here.
   This version tries to be comprehensive based on typical usage. */
